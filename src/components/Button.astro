---
import { fade } from "astro:transitions";

const {
  content,
  href,
  className = "",
  invert = false,
  isButton = false,
  buttonType = "button",
} = Astro.props;
---

{
  isButton ? (
    <button
      type={buttonType}
      class:list={[`button ${className} ${invert ? "button--invert" : ""}`]}
    >
      {content}
    </button>
  ) : (
    <a
      href={href}
      class:list={[`button ${className} ${invert ? "button--invert" : ""}`]}
    >
      {content}
    </a>
  )
}
<style lang="scss">
  .button {
    @apply uppercase py-[14px] min-w-[160px] rounded-[28px] border border-solid flex justify-center items-center border-font relative  overflow-hidden;
    &--invert {
      @apply text-white border-white;
    }
    &::after {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 100%;
      height: 100%;
      //   pointer-events: none;
      background-color: white;
      mix-blend-mode: color;
      clip-path: circle(0% at 50% 50%);
      transition: 0.8s clip-path ease-in-out;
      border-radius: 100px;
      overflow: hidden;
    }
    &:hover {
      &::after {
        clip-path: circle(100% at 50% 50%);
      }
    }
  }
</style>
